{{!
 If this is map and items are nullable, make sure that nulls are included.
 To determine what JsonInclude.Include method to use, consider the following:
 * If the field is required, always include it, even if it is null.
 * Else use custom behaviour, IOW use whatever is defined on the object mapper
 }}
    @field:JsonProperty(JSON_PROPERTY_{{nameInSnakeCase}})
    {{#isMap}}
        {{#items.isNullable}}
    @field:JsonInclude(content = JsonInclude.Include.ALWAYS{{^required}}, value = JsonInclude.Include.USE_DEFAULTS{{/required}})
        {{/items.isNullable}}
        {{^items.isNullable}}{{^required}}
    @field:JsonInclude(JsonInclude.Include.USE_DEFAULTS)
        {{/required}}{{/items.isNullable}}
    {{/isMap}}
    {{^isMap}}
        {{#required}}
            {{#isReadOnly}}
    @field:JsonInclude(JsonInclude.Include.USE_DEFAULTS)
            {{/isReadOnly}}
        {{/required}}
        {{^required}}
    @field:JsonInclude(JsonInclude.Include.USE_DEFAULTS)
        {{/required}}
    {{/isMap}}
    {{#withXml}}
        {{^isContainer}}
    @field:JacksonXmlProperty({{#isXmlAttribute}}isAttribute = true, {{/isXmlAttribute}}{{#xmlNamespace}}namespace = "{{xmlNamespace}}", {{/xmlNamespace}}localName = "{{#xmlName}}{{xmlName}}{{/xmlName}}{{^xmlName}}{{baseName}}{{/xmlName}}")
    @field:JacksonXmlProperty({{#isXmlAttribute}}isAttribute = true, {{/isXmlAttribute}}{{#xmlNamespace}}namespace = "{{xmlNamespace}}", {{/xmlNamespace}}localName = "{{#xmlName}}{{xmlName}}{{/xmlName}}{{^xmlName}}{{baseName}}{{/xmlName}}")
        {{/isContainer}}
        {{#isContainer}}
            {{#isXmlWrapped}}
    // items.xmlName={{items.xmlName}}
    @field:JacksonXmlElementWrapper(useWrapping = {{isXmlWrapped}}, {{#xmlNamespace}}namespace = "{{xmlNamespace}}", {{/xmlNamespace}}localName = "{{#items.xmlName}}{{items.xmlName}}{{/items.xmlName}}{{^items.xmlName}}{{items.baseName}}{{/items.xmlName}}")
            {{/isXmlWrapped}}
        {{/isContainer}}
    {{/withXml}}
    {{#jackson}}
        {{^micronaut_serde_jackson}}
            {{#isDateTime}}
                {{#datetimeFormat}}
    @field:JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "{{{datetimeFormat}}}")
                {{/datetimeFormat}}
            {{/isDateTime}}
            {{#isDate}}
                {{#dateFormat}}
    @field:JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "{{{dateFormat}}}")
                {{/dateFormat}}
            {{/isDate}}
        {{/micronaut_serde_jackson}}
    {{/jackson}}
    {{#micronaut_serde_jackson}}
        {{#isDateTime}}
            {{#datatimeFormat}}
    @field:JsonFormat(pattern = "{{{datetimeFormat}}}")
            {{/datatimeFormat}}
        {{/isDateTime}}
        {{#isDate}}
            {{#dateFormat}}
    @field:JsonFormat(pattern = "{{{dateFormat}}}")
            {{/dateFormat}}
        {{/isDate}}
    {{/micronaut_serde_jackson}}
